(* ::Package:: *)

(* ::Input:: *)
(*(*intestazioni*)*)
(*BeginPackage["Sudoku`"]*)
(*Sudoku::usage ="Sudoku[DIFFICULTY] crea un'istanza del gioco Sudoku con vari livelli di difficolt\[AGrave] selezionabile dal client ponendo DIFFICULTY='easy', 'medium', 'hard'"*)
(**)
(*Solve::usage =*)
(*"Risolve una matrice rappresentante una tavola sudoku con numeri dati"*)
(*(*Se creiamo altre funzioni da usare nel pacchetto vanno descritte qui*)*)
(**)
(*Begin["`Private`"]*)
(*(* DIRETTIVE*)
(*Inserire nella prima coppia di graffe tutte le variabili che usiamo nel codice. TUTTE. Inserire all'interno delle seconde graffe il codice vero e proprio*)
(**)*)
(**)
(*isValid[grid_,r_,c_,k_]:=Module[{_not _in _row,_not _in _column,_not _in _box},*)
(*not_in _row=k\[NotElement]grid[[r]];*)
(*not_in _column=k\[NotElement](grid[[All,c]]);*)
(*not_in _box=k\[NotElement](grid[[Quotient[r,3]*3+#&/@Range[3],Quotient[c,3]*3+#&/@Range[3]]]//Flatten);*)
(*not_in _row&&not_in _column&&not_in _box]*)
(**)
(*Solve[grid_,r_:0,c_:0]:=Module[{},{*)
(*If[r==9,True,If[c==9,Solve[grid,r+1,0],If[grid[[r+1,c+1]]!=0,Solve[grid,r,c+1],Catch[Do[If[isValid[grid,r,c,k],grid[[r+1,c+1]]=k;*)
(*If[Solve[grid,r,c+1],Throw[True]];*)
(*grid[[r+1,c+1]]=0],{k,1,9}];*)
(*Throw[False]]]]*)
(*]*)
(*}]*)
(**)
(*End[]*)
(*EndPackage[]*)



