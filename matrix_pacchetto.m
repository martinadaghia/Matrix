(* ::Package:: *)

(* ::Input:: *)
(*BeginPackage["Matrix`"]*)
(*(**)
(*prodottoMatrici::usage = ""*)
(**)
(*inputMatrice::usage = ""*)
(**)
(*askKindOfMatrix::usage = ""*)
(**)
(*askForDimensions::usage = ""*)
(**)
(*generateRandomMatrix::usage = ""*)
(**)*)
(**)
(*prodottoMatrici[A_, B_] := Module[{m, n, q, p, resultMatrix, i, j, k}, *)
(*{m, n} = Dimensions[A]; *)
(*{q, p} = Dimensions[B]; *)
(*    If[m != p, Print["Le dimensioni delle matrici non sono compatibili per il prodotto."]; Return[]]; resultMatrix = ConstantArray[0, {m, p}]; *)
(*    Do[resultMatrix[[i,j]] = Sum[Print["Calcolo ", A[[i,k]], " * ", B[[k,j]], " = ", A[[i,k]]*B[[k,j]]]; A[[i,k]]*B[[k,j]], {k, n}]; *)
(*      Print["La somma \[EGrave]: ", resultMatrix[[i,j]]], {i, m}, {j, p}]; resultMatrix]*)
(**)
(*inputMatrice[name_] := Module[{n, m, messaggio, inserimentoRighe, inserimentoColonne, valore, matrice}, *)
(*  inserimentoRighe = StringJoin["Inserisci il numero di righe della matrice ", name, ": "]; *)
(*  inserimentoColonne = StringJoin["Inserisci il numero di colonne della matrice ", name, ": "]; *)
(*  While[ !NumericQ[n], Print["Errore: Inserisci un valore numerico."]; *)
(*	n = Input[inserimentoRighe]; *)
(*]; *)
(*  While[ !NumericQ[m], Print["Errore: Inserisci un valore numerico."]; *)
(*m = Input[inserimentoColonne]; *)
(*]; *)
(*  Print[StringJoin["Numero di righe della matrice ", name, " che hai inserito: "], n]; *)
(*  Print[StringJoin["Numero di colonne della matrice ", name, " che hai inserito: "], m]; Print["Creazione della matrice vuota"]; *)
(*  matrice = ConstantArray[0, {n, m}]; *)
(*Do[messaggio = StringJoin["Inserisci il valore per l'elemento (", ToString[i], ",", ToString[j], "): "]*)
(*valore = Input[messaggio]; *)
(*   While[ !NumericQ[valore], *)
(*	Print["Errore: Inserisci un valore numerico."]; valore = Input[messaggio]; *)
(*  ]; *)
(*matrice[[i,j]] = valore; , {i, n}, {j, m}*)
(*]; *)
(*matrice; *)
(*Print[StringJoin["Matrice ", name, " creata."]]; *)
(*Print[matrice]; *)
(*Return[matrice]]*)
(**)
(*generateRandomMatrix[r1c2_, c1_, r2_] := Module[{seed, matriceA, matriceB}, *)
(*(*Chiedere, vuoi riempire la matrice o la vuoi random?*)*)
(*seed = Input["Inserisci il valore del seed (compreso tra 0 e 10000): "]; *)
(*SeedRandom[seed]; *)
(*  Print["Il seed \[EGrave]: "]; *)
(*Print[seed]; *)
(*matriceA = RandomInteger[{0, 10}, {r1c2, c1}]; *)
(*matriceB = RandomInteger[{0, 10}, {r2, r1c2}]; *)
(*  Print["Matrice randomica A: "]; *)
(*Print[matriceA]; *)
(*Print["Stampa griglia della matrice A: "]; *)
(*Grid[matriceA, Frame -> All]; *)
(*  Print["Matrice randomica B: "]; *)
(*Print[matriceB]; *)
(*Print["Stampa griglia della matrice B: "]; *)
(*Grid[matriceB, Frame -> All]; *)
(*    {matriceA, matriceB}]*)
(**)
(**)
(*(**)
(*A = inputMatrice["A"]; *)
(*B = inputMatrice["B"];*)
(**)*)
(*(* chiamo la funzione per mostrare gli input all'utente *)*)
(*(*DynamicModule[{righe1, colonne1, righe2, colonne2},*)*)
(**)
(*askKindOfMatrix[]:=DynamicModule[{random=False},*)
(*CreateDialog[*)
(*Column[{*)
(*TextCell["Preferisci esercitarti con matrici riempite randomicamente oppure con matrici a tua scelta?"],*)
(*Row[{*)
(*Button["Random",*)
(*random=True; *)
(*DialogReturn[]*)
(*],*)
(*Button["Custom",*)
(*random=False;*)
(*DialogReturn[]*)
(*]*)
(*}, Alignment->Center],*)
(*DefaultButton[]}*)
(*],Modal->True];*)
(*If[random,Print["Random"],Print["Custom"]]]*)
(**)
(**)
(**)
(*askForDimensions[] := DynamicModule[{righe1, colonne1, righe2, colonne2},*)
(*Grid[{*)
(*	   { "Prima matrice - Inserisci valori fra 1 e 5:", SpanFromLeft },*)
(*	   { *)
(*	InputField[Dynamic[righe1], Number, FieldSize -> {15, 1.5}, Alignment -> Center, FieldHint -> "Righe prima matrice"],*)
(*	InputField[Dynamic[colonne1], Number, FieldSize -> {15, 1.5}, Alignment -> Center, FieldHint -> "Colonne prima matrice"] *)
(* },*)
(*	    { "Seconda matrice - Inserisci valori fra 1 e 5:", SpanFromLeft },*)
(*	    { *)
(*	InputField[Dynamic[righe2], Number, FieldSize -> {15, 1.5}, Alignment -> Center, FieldHint -> "Righe seconda matrice"],*)
(*	InputField[Dynamic[colonne2], Number, FieldSize -> {15, 1.5}, Alignment -> Center, FieldHint -> "Colonne seconda matrice"] *)
(* },*)
(*	    { *)
(*	SpanFromLeft, *)
(*	Button["Valida le dimensioni!",*)
(*			If[IntegerQ[righe1] && 1 <= righe1 <= 5 && IntegerQ[colonne1] && 1 <= colonne1 <= 5 *)
(*&&IntegerQ[righe2] && 1 <= righe2 <= 5 && IntegerQ[colonne2] && 1 <= colonne2 <= 5,*)
(*		If[righe1 != colonne2, *)
(*					MessageDialog["Il numero di righe della prima matrice e di colonne della seconda deve coincidere"];*)
(*					Return askForDimensions[],*)
(*					askKindOfMatrix[]*)
(*		],	 *)
(*				MessageDialog["Le dimensioni inserite non sono valide! Ricorda di inserire valori da 1 a 5."]*)
(*			]*)
(*	]*)
(*	    }*)
(*}]*)
(*]*)
(**)
(*askForDimensions[]*)
(*(*randomMatrici[righe, colonne]*)
(*result = prodottoMatrici[A, B]; *)
(**)
(*Print[result]; *)
(*Grid[{{Grid[A, Frame -> All], "x", Grid[B, Frame -> All], "=", Grid[result, Frame -> All]}}]*)
(**)*)
(*EndPackage[]*)


(* ::Input:: *)
(**)







(* ::Input:: *)
(**)


(* ::Input:: *)
(**)


(* ::Input:: *)
(**)


(* ::Input:: *)
(**)
